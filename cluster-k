import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler

# Sample Data Creation (you can replace this with actual data)
data = {
    'Customer_ID': range(1, 101),
    'Age': np.random.randint(18, 70, size=100),
    'Annual_Income': np.random.randint(300000, 2000000, size=100),
    'Transaction_Volume': np.random.randint(10, 100, size=100),  # Total transaction count per year
    'City_Tier': np.random.choice([1, 2, 3], size=100)  # City tier as a demographic variable
}

# Creating DataFrame
df = pd.DataFrame(data)

# Feature Selection (we exclude Customer_ID for clustering)
features = ['Age', 'Annual_Income', 'Transaction_Volume', 'City_Tier']

# Scaling the data (necessary for KMeans)
scaler = StandardScaler()
scaled_features = scaler.fit_transform(df[features])

# Applying KMeans Clustering
kmeans = KMeans(n_clusters=3, random_state=42)  # Let's say we create 3 clusters
df['Cluster'] = kmeans.fit_predict(scaled_features)

# Adding cluster labels to the original data
print("Cluster Centers:\n", kmeans.cluster_centers_)

# Visualizing Clusters (2D Plot for simplicity using Age and Income)
plt.figure(figsize=(8, 6))
plt.scatter(df['Age'], df['Annual_Income'], c=df['Cluster'], cmap='viridis', label='Clusters')
plt.xlabel('Age')
plt.ylabel('Annual Income')
plt.title('Customer Segmentation Based on Age and Annual Income')
plt.colorbar(label='Cluster')
plt.show()

# Display sample clustered data
print(df.head())

# Checking the count of customers in each cluster
cluster_summary = df.groupby('Cluster').size()
print("Customers in Each Cluster:\n", cluster_summary)