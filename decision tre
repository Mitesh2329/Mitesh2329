import pandas as pd
from sklearn.tree import DecisionTreeClassifier, plot_tree
from sklearn.model_selection import train_test_split
import matplotlib.pyplot as plt

# Sample data (replace with your actual dataset)
data = pd.DataFrame({
    'loan_amount': [1000, 1500, 2000, 2500, 3000, 3500, 4000, 4500, 5000, 5500],
    'loan_duration': [12, 18, 24, 30, 36, 42, 48, 54, 60, 66],
    'credit_score': [700, 720, 680, 690, 710, 750, 680, 725, 740, 760],
    'loan_default': [0, 1, 0, 0, 1, 0, 1, 0, 0, 1]
})

# Define independent variables (X) and target variable (y)
X = data[['loan_amount', 'loan_duration', 'credit_score']]
y = data['loan_default']

# Split the data into training and testing sets (70% train, 30% test)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Initialize the DecisionTreeClassifier with Gini criterion and fit to the data
dt_model = DecisionTreeClassifier(criterion='gini', max_depth=3, random_state=42)
dt_model.fit(X_train, y_train)

# Visualize the decision tree with feature names and class names
plt.figure(figsize=(12, 8))
plot_tree(dt_model, feature_names=X.columns, class_names=['No Default', 'Default'], filled=True, rounded=True, fontsize=10)
plt.show()