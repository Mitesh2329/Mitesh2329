import numpy as np
import matplotlib.pyplot as plt

# Example historic GDP growth rates (20 years)
gdp_growth_rates = np.array([2.5, 3.1, 1.8, 2.9, 4.2, 3.0, 2.7, 1.9, 3.3, 2.4,
                             2.8, 3.5, 2.9, 1.7, 3.1, 2.2, 3.8, 2.0, 2.6, 3.4])

# Calculate mean and standard deviation of growth rates
mean_growth = np.mean(gdp_growth_rates)
std_growth = np.std(gdp_growth_rates)

# Number of simulations and years to project
n_simulations = 1000
n_years = 10

# Initial GDP (you can replace this with actual GDP value)
initial_gdp = 1000

# Generate simulated growth rates using normal distribution
simulated_growth_rates = np.random.normal(mean_growth, std_growth, (n_simulations, n_years))

# Simulate future GDP
simulated_gdp = np.zeros((n_simulations, n_years))
simulated_gdp[:, 0] = initial_gdp * (1 + simulated_growth_rates[:, 0] / 100)

for year in range(1, n_years):
    simulated_gdp[:, year] = simulated_gdp[:, year - 1] * (1 + simulated_growth_rates[:, year] / 100)

# Plotting the results of simulations
plt.plot(simulated_gdp.T, color='blue', alpha=0.1)
plt.title('Simulated GDP over 10 Years')
plt.xlabel('Years')
plt.ylabel('GDP')
plt.show()