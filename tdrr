import pandas as pd
import numpy as np
import statsmodels.api as sm
import matplotlib.pyplot as plt

# Set random seed for reproducibility
np.random.seed(42)

# Create a dummy dataset
# Generate monthly dates for 4 years
dates = pd.date_range(start='2020-01-01', periods=48, freq='M')

# Create 20 buckets
num_buckets = 20
data = {
    'Date': np.tile(dates, num_buckets),
    'Bucket': np.repeat([f'Bucket_{i+1}' for i in range(num_buckets)], len(dates)),
    'Total_Amount': np.random.randint(10000, 50000, size=num_buckets * len(dates)),
    'Premature_Amount': np.random.randint(1000, 10000, size=num_buckets * len(dates))
}

# Create DataFrame
df = pd.DataFrame(data)

# Create a recency weight variable
# Define weights based on recency (more weight for recent months)
def calculate_recency_weight(date):
    if date >= pd.Timestamp('2023-01-31'):
        return 3.0  # Last year (latest 12 months)
    elif date >= pd.Timestamp('2022-01-31'):
        return 1.5  # Previous year
    else:
        return 1.0  # Older data

# Apply the weights based on date
df['Weights'] = df['Date'].apply(calculate_recency_weight)

# Define the dependent and independent variables
# We will predict the total amount based on the premature amount
X = df[['Premature_Amount']]
y = df['Total_Amount']

# Add constant for intercept in regression
X = sm.add_constant(X)

# Fit Weighted Ordinary Least Squares model
model = sm.WLS(y, X, weights=df['Weights'])
results = model.fit()

# Print the summary of the model
print(results.summary())

# Adding fitted values to the DataFrame for visualization
df['Fitted_Values'] = results.fittedvalues

# Plotting to visualize the results for the last month (April 2024)
plt.figure(figsize=(10, 6))
last_month_data = df[df['Date'] == '2024-04-30']
plt.scatter(last_month_data['Premature_Amount'], last_month_data['Total_Amount'], label='Data Points', alpha=0.5)
plt.plot(last_month_data['Premature_Amount'], last_month_data['Fitted_Values'], color='red', label='WLS Fit')
plt.xlabel('Premature Amount')
plt.ylabel('Total Amount')
plt.title('Weighted Ordinary Least Squares Regression with Recency Effect for April 2024')
plt.legend()
plt.show()